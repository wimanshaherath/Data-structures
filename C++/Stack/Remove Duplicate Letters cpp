 
string solve(string s){
string res;
stack<char> stk;
set<char> present;
map<char,int>last;
for(int i=0;i<s.size();i++){
    last[s[i]]=i;
}
for(int i=0;i<s.size();i++){
    if(present.find(s[i])!=present.end()){
        continue;
    }
    while(!stk.empty() && stk.top()>s[i] && last[stk.top()]>i){
        present.erase(stk.top());
        stk.pop();
    }
    stk.push(s[i]);
    present.insert(s[i]);
}
while(!stk.empty()){
    res+=stk.top();
    stk.pop();
}
reverse(res.begin(),res.end());
return res;
}
